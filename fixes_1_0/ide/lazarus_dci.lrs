LazarusResources.Add('lazarus_dci_file','DCI',[
  '[arrayd | array declaration (var)]'#10'$(AttributesStart)'#10'EnableMakros=t'
  +'rue'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'$Param(VariableName): arra'
  +'y[0..$Param(HighNumber)] of $Param(String);'#10'|'#10'[arrayc | array decla'
  +'ration (const)]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'$(Attribut'
  +'esEnd)'#10'array[$param(0)..$param(1)] of $param(Type) = (|);'#10'[cases | '
  +'case statement]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'$(Attribut'
  +'esEnd)'#10'case $param(var) of'#10'  : |;'#10'  : ;'#10'end;'#10'[be | begi'
  +'n end else begin end]'#10'begin'#10'  |'#10'end else'#10'begin'#10#10'end;'
  +#10'[casee | case statement (with else)]'#10'$(AttributesStart)'#10'EnableMa'
  +'kros=true'#10'$(AttributesEnd)'#10'case $param(var) of'#10'  : |;'#10'  : ;'
  +#10'else ;'#10'end;'#10'[classf | class declaration (all parts)]'#10'$(Attri'
  +'butesStart)'#10'EnableMakros=true'#10'RemoveChar=true'#10'$(AttributesEnd)'
  +#10'$Param(ClassName) = class($Param(InheritedClass))'#10'private'#10#10'pub'
  +'lic'#10'  |'#10'  constructor Create;'#10'  destructor Destroy; override;'
  +#10'end;'#10'[classd | class declaration (no parts)]'#10'$(AttributesStart)'
  +#10'EnableMakros=true'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'$Param(Cl'
  +'assName) = class($Param(InheritedClass))'#10'|'#10'end;'#10'[classc | class'
  +' declaration (with Create/Destroy overrides)]'#10'$(AttributesStart)'#10'En'
  +'ableMakros=true'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'$Param(ClassNa'
  +'me) = class($Param(InheritedClass))'#10'private'#10#10'protected'#10#10'pub'
  +'lic'#10'  |'#10'  constructor Create; override;'#10'  destructor Destroy; o'
  +'verride;'#10'published'#10'end;'#10'[d | debugln]'#10'$(AttributesStart)'#10
  +'EnableMakros=true'#10'$(AttributesEnd)'#10'debugln([''$ProcedureName() ''|]'
  +');'#10'[fors | for (no begin/end)]'#10'$(AttributesStart)'#10'EnableMakros='
  +'true'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'for $Param(CounterVar) :='
  +' $Param(0) to $Param(Count) - 1 do'#10'  |'#10'[forb | for statement]'#10'$'
  +'(AttributesStart)'#10'EnableMakros=true'#10'RemoveChar=true'#10'$(Attribute'
  +'sEnd)'#10'for $Param(CounterVar) := $Param(0) to $Param(Count) - 1 do'#10'b'
  +'egin'#10'  |'#10'end;'#10'[function | function declaration]'#10'$(Attribute'
  +'sStart)'#10'EnableMakros=true'#10'$(AttributesEnd)'#10'function $param(Name'
  +')($param( )): $param(Type);'#10'begin'#10'  |'#10'end;'#10'[hexc | HexStr(C'
  +'ardinal(),8)]'#10'HexStr(PtrUInt(|),8)'#10'[ifs | if (no begin/end)]'#10'if'
  +' $Param(Conditional) then'#10'  |'#10'[ifb | if statement]'#10'$(Attributes'
  +'Start)'#10'EnableMakros=true'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'i'
  +'f $Param(Conditional) then'#10'begin'#10'  |'#10'end;'#10'[ife | if then (n'
  +'o begin/end) else (no begin/end)]'#10'$(AttributesStart)'#10'EnableMakros=t'
  +'rue'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'if $Param(Conditional) the'
  +'n'#10'  |'#10'else'#10'[ifeb | if then else]'#10'$(AttributesStart)'#10'Ena'
  +'bleMakros=true'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'if $Param(Condi'
  +'tional) then'#10'begin'#10'  |'#10'end'#10'else begin'#10#10'end;'#10'[proc'
  +'edure | procedure declaration]'#10'procedure $Param(ProcName)|($Param());'
  +#10'begin'#10'  |'#10'end;'#10'[ofall | case of all enums]'#10'$(AttributesS'
  +'tart)'#10'EnableMakros=true'#10'$(AttributesEnd)'#10'of'#10'|$OfAll()end;'
  +#10'[trye | try except]'#10'try'#10'  | '#10'except'#10#10'end;'#10'[tryf | '
  +'try finally]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'RemoveChar=tr'
  +'ue'#10'$(AttributesEnd)'#10'try'#10'  |'#10'finally'#10'  $Param(FreeStatem'
  +'ent,default)'#10'end;'#10'[trycf | try finally (with Create/Free)]'#10'$(At'
  +'tributesStart)'#10'EnableMakros=true'#10'RemoveChar=true'#10'$(AttributesEn'
  +'d)'#10'$Param(VarName) := $Param(TMyClassName).Create;'#10'try'#10'  |'#10
  +'finally'#10'  $Param(VarName,Sync=1).Free;'#10'end;'#10'[whileb | while sta'
  +'tement]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'RemoveChar=true'#10
  +'$(AttributesEnd)'#10'while $Param(LoopCondition) do'#10'begin'#10'  |'#10'e'
  +'nd;'#10'[whiles | while (no begin)]'#10'while $Param(LoopCondition) do'#10
  +'  |'#10'[withb | with statement]'#10'$(AttributesStart)'#10'EnableMakros=tr'
  +'ue'#10'RemoveChar=true'#10'$(AttributesEnd)'#10'with $Param(Object) do'#10
  +'begin'#10'  |'#10'end;'#10'[b | begin end]'#10'begin'#10'  |'#10'end;'#10'['
  +'withs | with (no begin)]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'R'
  +'emoveChar=true'#10'$(AttributesEnd)'#10'with $Param(Object) do'#10'  |'#10
  +'[withc | with for components]'#10'$(AttributesStart)'#10'EnableMakros=true'
  +#10'RemoveChar=true'#10'$(AttributesEnd)'#10'with $Param(Object) do'#10'begi'
  +'n'#10'  Name:=''$Param(NameText)'';'#10'  Parent:=Self;'#10'  Left:=$Param('
  +'0);'#10'  Top:=$Param(0);'#10'  Width:=$Param(0);'#10'  Height:=$Param(0);'
  +#10'  Caption:=''$Param(CaptionText)'';'#10'end;'#10'|'#10'[fpc | Conditiona'
  +'l FPC Mode]'#10'$(AttributesStart)'#10'RemoveChar=true'#10'$(AttributesEnd)'
  ,#10'{$IFDEF FPC}'#10'  {$mode objfpc}{$H+}'#10'{$ENDIF}'#10'|'#10'[todo | To'
  +'Do item creator]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'RemoveCha'
  +'r=true'#10'$(AttributesEnd)'#10'{ TODO -o$Param(Author) : $Param(Note) } |'
  +#10'[w | writeln]'#10'$(AttributesStart)'#10'EnableMakros=true'#10'$(Attribu'
  +'tesEnd)'#10'writeln(''$ProcedureName() ''|);'#10
]);
